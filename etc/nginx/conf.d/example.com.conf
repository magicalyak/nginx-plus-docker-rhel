# 444 Close connection Without Response on requests without hostname
# server {
#     listen 80 default_server;
#     listen 443 ssl default_server;
#     ssl_certificate /etc/nginx/ssl/example.com.crt;
#     ssl_certificate_key /etc/nginx/ssl/example.com.key;
#     server_name _;
#     return 444;
# }
# www.example.com HTTP
server {
    listen 80 default_server;
    server_name www.example.com "";
    status_zone www.example.com_http;
    location / {
        include includes/proxy_headers/proxy_headers.conf;
        proxy_pass http://dummy_servers;
    }

    # Active Healthcheck
     location @health_check {
            proxy_set_header Host www.example.com;
            proxy_pass http://dummy_servers;

            health_check interval=5s fails=2 passes=2 uri=/health match=status_text_ok;
            access_log  /var/log/nginx/health_check.log  main;

            internal;  # Internal request only
    }

}
# www2.example.com HTTP Redirect to HTTPS
server {
    listen 80;
    server_name www2.example.com;
    return 301 https://$host$request_uri;
}
# ww2.example.com HTTPS
# See best practices for security and compatibility here: https://mozilla.github.io/server-side-tls/ssl-config-generator/ 
server {
    listen 443 ssl;
    status_zone www2.example.com_https;
    ssl_certificate /etc/ssl/example.com.crt;
    ssl_certificate_key /etc/ssl/example.com.key;
    server_name ww2.example.com;
    location / {
        include includes/proxy_headers/proxy_headers.conf;
        proxy_pass http://dummy_servers;
    }

}
